
#pragma config(Sensor, S1,     left_light,     sensorEV3_Color)
#pragma config(Sensor, S2,     middle_light,   sensorEV3_Color, modeEV3Color_Color)
#pragma config(Sensor, S3,     right_light,    sensorEV3_Color)
#pragma config(Sensor, S4,     ultrasonicc,    sensorEV3_Ultrasonic)
#pragma config(Motor,  motorB,          motorLeft,     tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorC,          motorRight,    tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorD,          motorMiddle,   tmotorEV3_Large, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#define THRESHOLD 50
task main()
{
	int left_light_value;
	int right_light_value;

	int count1 = 0;   // 캹AU?
	int count2 = 0;   // k“?


	left_light_value   =  SensorValue(left_light);
	right_light_value  =  SensorValue(right_light);


    while(true)
    {


     if(SensorValue(S2)==5)
     {
     while(count2=0)
        {
            if(left_light_value > THRESHOLD)
            {
              if(right_light_value > THRESHOLD)
              {  setMotorSpeed(motorB,60);
	               setMotorSpeed(motorC,60);
	            }
	          }
        }
     }
	   else
  {
	     if(right_light_value > THRESHOLD)

	     {
	       setMotorSpeed(motorB,30);
	       setMotorSpeed(motorC,-30);
	     }

	     else
	      { count1++;
	      	clearTimer(T2);
	      	while(time1[T2]<500)
	      		{  setMotorSpeed(motorB,0);
	             setMotorSpeed(motorC,0);
	          }
	      }
	 }
	 }
}



}
